
services:
  litestar_server:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - {{ secrets.TRAEFIK_NETWORK }}
    # ports:
    #   - 8000:8000 # handled by traefik
    restart: unless-stopped
    labels:
      # Main HTTPS router
      - traefik.enable=true
      - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}.rule=Host(`{{ secrets.MY_DOMAIN }}`) || Host(`www.{{ secrets.MY_DOMAIN }}`) || Host(`{{ secrets.MY_DOMAIN_TWO }}`) || Host(`www.{{ secrets.MY_DOMAIN_TWO }}`)
      - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}.entrypoints=web,websecure
      - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}.tls.certresolver=myresolver
      - traefik.http.services.{{ secrets.ROOTSITE.USERNAME }}.loadbalancer.server.port={{ secrets.ROOTSITE.APPLICATION_PORT }}

      # # Second site HTTPS router
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}two.rule=Host(`{{ secrets.MY_DOMAIN_TWO }}`) || Host(`www.{{ secrets.MY_DOMAIN_TWO }}`)
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}two.entrypoints=web,websecure
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}two.tls.certresolver=myresolver
      # - traefik.http.services.{{ secrets.ROOTSITE.USERNAME }}two.loadbalancer.server.port={{ secrets.ROOTSITE.APPLICATION_PORT }}

      # # HTTP router for redirecting to HTTPS
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}-http.rule=Host(`{{ secrets.MY_DOMAIN }}`) || Host(`www.{{ secrets.MY_DOMAIN }}`)
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}-http.entrypoints=web
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}-http.middlewares=redirect-to-https

      # # Middleware for redirecting HTTP to HTTPS
      # - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      

      # Middleware to add CSP header # this will block all non-whitelisted resources, including any images, <scripts> and stylesheets, also covers most of the points on CSP analysis tab at https://developer.mozilla.org/en-US/observatory/analyze
      - traefik.http.middlewares.csp-header.headers.customResponseHeaders.Content-Security-Policy="default-src 'self'; frame-ancestors 'none'; script-src 'self' https://cdn.tailwindcss.com https://unpkg.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; font-src https://fonts.gstatic.com; img-src 'self' data:; base-uri 'self'; form-action 'self' *.{{ secrets.MY_DOMAIN }};"
      
      # Add the X-Frame-Options, X-Content-Type-Options and referrer header
      - traefik.http.middlewares.xfo-header.headers.customResponseHeaders.X-Frame-Options=SAMEORIGIN
      - traefik.http.middlewares.x-content-header.headers.customResponseHeaders.X-Content-Type-Options=nosniff
      - traefik.http.middlewares.referrer-policy-header.headers.customResponseHeaders.Referrer-Policy=same-origin

      # Add middlewares
      - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}.middlewares=xfo-header,x-content-header,csp-header,referrer-policy-header
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}two.middlewares=xfo-header,x-content-header,csp-header,referrer-policy-header
      # - traefik.http.routers.{{ secrets.ROOTSITE.USERNAME }}.middlewares=authelia@docker

networks:
  {{ secrets.TRAEFIK_NETWORK }}:
    external: true
